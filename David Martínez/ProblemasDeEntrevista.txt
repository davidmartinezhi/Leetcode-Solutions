====================================================
Recibes un array con "N" elementos.
Recibes un número "M" que representan secciones en el array donde los elementos estan ordenados.
Cada subarray "M" puede tener distinto size
Debes regresar un array con todos los numeros ordenados

Ejemplo.
N = 9
M = 3 
[0, 1, 5, 4, 8, 10, 12, 9, 10] -> [0, 1, 2, 4, 5, 8, 9, 10, 10, 12]

*Para aclarar la explicación las secciones son: [0, 1, 5] [4, 8, 10, 12] [9, 10]
Pero el input te llega como un solo array

Obvio puedes hacer un sort y ya, pero, ¿habrá una manera más eficiente? según la información que te dan

Quetal si lo prioridad es el runtime y no la memoria?
Puedes resolverlo en runtime O(n), aunque la memoria sea de O(n) también.
============================================================

Recibes un string de una operación matematica
La operación solo contiene simbolos de suma(+) y multiplicación(*). No incluye parentesís.
Debes regresar un entero con ese resultado a esa operación.

Ejemplo: "2+6+3*4" -> 20

Existen diferentes maneras de resolver este problema. y eso es lo bonito
Podrías hacer una función para regresar el entero, dependiendo del string

Podrías meter a un stack las operacións que vas encontrando y cada entero.
Recuerda que las multiplicación tienen mayor prioridad a una suma



